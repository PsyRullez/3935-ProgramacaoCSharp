<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        YQAAAABJRU5ErkJggg==
</value>
  </data>
</root>